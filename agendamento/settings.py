"""
Django settings for agendamento project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-vl@*&6ol)_i$a&8a-4=r71ibnqd*v(k-iwt*$dmra^$m4t)8eu')

# SECURITY WARNING: don't run with debug turned on in production!
# Temporariamente TRUE para diagnosticar erro 502
DEBUG = True  # os.environ.get('DEBUG', 'False').lower() == 'true'

ALLOWED_HOSTS = ['*']  # Aceitar todos os hosts temporariamente


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookings',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Para servir arquivos estáticos
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'agendamento.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'agendamento.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Configuração de banco: Railway usa DATABASE_URL obrigatoriamente
database_url = os.environ.get('DATABASE_URL')
railway_environment = os.environ.get('RAILWAY_ENVIRONMENT_NAME')

if database_url:
    # Produção (Railway) - Usar DATABASE_URL fornecida pelo Railway
    DATABASES = {
        'default': dj_database_url.parse(
            database_url,
            conn_max_age=600,
            conn_health_checks=True,
        )
    }
elif railway_environment:
    # Estamos no Railway mas sem DATABASE_URL - erro crítico
    import sys
    print("ERRO: DATABASE_URL não encontrada! Railway requer PostgreSQL.")
    print("Configure DATABASE_URL no Railway com o banco PostgreSQL.")
    print("Vá em: Dashboard → + New → Database → Add PostgreSQL")
    sys.exit(1)
else:
    # Desenvolvimento local - SQLite OK
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Configuração para produção - arquivos estáticos
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Configuração adicional para WhiteNoise
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configurações do sistema de agendamento
DEFAULT_DAILY_TIMES = ["09:00", "10:00", "11:00", "14:00", "15:00", "16:00"]

# Configurações do Jazzmin (Admin mais amigável)
JAZZMIN_SETTINGS = {
    "site_title": "Sistema Agendamento",
    "site_header": "Agendamento",
    "site_brand": "Agendamento",
    "welcome_sign": "Bem-vindo ao Sistema de Agendamento",
    "copyright": "Sistema de Agendamento",
    "search_model": ["bookings.Booking"],
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {"name": "Agenda Hoje", "url": "/admin-dashboard/", "permissions": ["auth.view_user"]},
    ],
    "show_sidebar": True,
    "navigation_expanded": True,
    "order_with_respect_to": ["bookings"],
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
        "bookings.Service": "fas fa-cogs",
        "bookings.Booking": "fas fa-calendar-check",
        "bookings.Schedule": "fas fa-clock",
    },
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",
    "related_modal_active": False,
    "custom_css": None,
    "custom_js": None,
    "use_google_fonts_cdn": True,
    "show_ui_builder": False,
}

# Configurações do sistema de agendamento
DEFAULT_DAILY_TIMES = ['09:00', '10:00', '11:00', '14:00', '15:00', '16:00']

# WhatsApp Business
WHATSAPP_BUSINESS_NUMBER = "5524998190280"  # +55 24 99819-0280

# Configurações específicas para Railway (produção)
# Temporariamente comentado para debugging
"""
if 'RAILWAY_ENVIRONMENT' in os.environ:
    # Forçar configurações de produção
    DEBUG = False
    ALLOWED_HOSTS = ['*']
    
    # Configurações de segurança
    SECURE_SSL_REDIRECT = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_REFERRER_POLICY = 'same-origin'
    
    # Configuração de arquivos estáticos para Railway
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
"""
    
# Logging para debugging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': False,
        },
    },
}
