#!/usr/bin/env python
"""
Script para configurar o ambiente de produ√ß√£o no Railway
"""
import os
import sys
import django
from django.core.management import execute_from_command_line

def main():
    print("üöÄ === INICIANDO SETUP DE PRODU√á√ÉO ===")
    
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'agendamento.settings')
    django.setup()
    
    try:
        print("üîÑ Executando migra√ß√µes...")
        execute_from_command_line(['manage.py', 'migrate', '--noinput', '--verbosity=2'])
        print("‚úÖ Migra√ß√µes conclu√≠das!")
        
        print("üîÑ Coletando arquivos est√°ticos...")
        execute_from_command_line(['manage.py', 'collectstatic', '--noinput', '--clear'])
        print("‚úÖ Arquivos est√°ticos coletados!")
        
        print("üîÑ Criando dados iniciais...")
        from django.contrib.auth.models import User
        from bookings.models import Service
        
        # Criar superuser se n√£o existir
        if not User.objects.filter(username='admin').exists():
            User.objects.create_superuser('admin', 'admin@example.com', 'admin123')
            print("‚úÖ Superuser 'admin' criado!")
        else:
            print("‚ÑπÔ∏è Superuser 'admin' j√° existe")
        
        # Criar servi√ßos padr√£o se n√£o existirem
        if not Service.objects.exists():
            services = [
                {'name': 'Consulta', 'duration_minutes': 60, 'price_cents': 10000},
                {'name': 'Exame', 'duration_minutes': 30, 'price_cents': 5000},
                {'name': 'Retorno', 'duration_minutes': 30, 'price_cents': 6000},
            ]
            for service_data in services:
                Service.objects.create(**service_data)
            print("‚úÖ Servi√ßos padr√£o criados!")
        else:
            print("‚ÑπÔ∏è Servi√ßos j√° existem")
        
        print("üéâ === SETUP DE PRODU√á√ÉO CONCLU√çDO COM SUCESSO! ===")
        return True
        
    except Exception as e:
        print(f"‚ùå === ERRO NO SETUP DE PRODU√á√ÉO ===")
        print(f"Erro: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    success = main()
    if not success:
        sys.exit(1)